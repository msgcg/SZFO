@model SZFO.Book

@{
    ViewBag.Title = "Добавить товар";
}

<h2 style="color: #d52b1e;">Добавьте товар:</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="background-color: white; color: gray;">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", style = "border-color: #d52b1e;" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", style = "border-color: #d52b1e;" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Category, (SelectList)ViewBag.Categories, "Выберите категорию", new { @class = "form-control", style = "border-color: #d52b1e;" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FullDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control", style = "border-color: #d52b1e;" } })
            @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Поле для выбора файла и кнопки для загрузки/обработки файла -->
    <div class="form-group">
        @Html.Label("Загрузить файл", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                <input type="file" name="file" class="form-control" style="border-color: #d52b1e;" />
                <div class="input-group-btn" style="margin-left: 10px;">
                    <button type="submit" class="btn" formaction="@Url.Action("Upload", "Home")" formmethod="post" style="background-color: #d52b1e; color: white; margin-right: 10px;">
                        - Загрузить
                    </button>
                    <input type="submit" value="Обработать файл" formaction="@Url.Action("ProcessFile", "Home")" formmethod="post" class="btn" style="background-color: #d52b1e; color: white;" />
                </div>
            </div>
        </div>
    </div>


    <br>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Добавить из текста" class="btn" style="background-color: #d52b1e; color: white;" />
        </div>
    </div>

</div>
}

<br>
<div>
    @Html.ActionLink("Вернуться", "Index", null, new { @class = "btn", style = "background-color: gray; color: white;" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
